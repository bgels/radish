import java.io.File;


class SongEntry {
  String folderName;
  File   audioFile;
  File   jsonFile;     // the .json setup file
  File   smFile;       // the .sm note file

  SongEntry(String folderName, File audioFile, File jsonFile, File smFile) {
    this.folderName = folderName;
    this.audioFile  = audioFile;
    this.jsonFile   = jsonFile;
    this.smFile     = smFile;
  }
}


class MainMenu{
    ArrayList<SongEntry> entries = new ArrayList<SongEntry>();
    int               buttonWidth = 200, buttonHeight = 50, margin = 20;
    String            selected = "";

    public MainMenu(String path){
        File dir = new File(dataPath(path));
        if(dir.exists() && dir.isDirectory()){
            for(File file : dir.listFiles()){
                if(!file.isDirectory()){
                    continue;
                }

                File oggFile = null;
                File jsonFile = null;
                File smFile = null;
                for(File subFile : file.listFiles()){
                    if(subFile.getName().endsWith(".ogg")){
                        oggFile = subFile;
                    } else if(subFile.getName().endsWith(".json")){
                        jsonFile = subFile;
                    } else if(subFile.getName().endsWith(".sm")){
                        smFile = subFile;
                    }
                }

                if(oggFile != null && jsonFile != null && smFile != null){
                    entries.add(new SongEntry(folder.getName(), oggFile, jsonFile, smFile));
                    println("Added song: " + file.getName());
                }
            }
        }

    }

    void update() {
        background(30);
        textAlign(CENTER, CENTER);
        textSize(24);
        fill(255);
        text("Select a Song", width/2, margin + 20);

        // Each button with proper spacing
        for (int i = 0; i < entries.size(); i++) {
        int x = width/2 - buttonWidth/2;
        int y = margin*2 + 60 + i*(buttonHeight + margin);
        String name = entries.get(i).folderName;
        if (name.length() > 20) {
            name = name.substring(0, 20) + "...";
        }

        // Hover effect
        if (over(x, y, buttonWidth, buttonHeight)){
            fill(100);
        }
        else{
            fill(70);
        }
        rect(x, y, buttonWidth, buttonHeight, 8);

        fill(255);
        textSize(20);
        text(name, x + buttonWidth/2, y + buttonHeight/2);
        }
    }

    // Handle clicks to select an entry
    void mousePressed() {
        for (int i = 0; i < entries.size(); i++) {
        int x = width/2 - buttonWidth/2;
        int y = margin*2 + 60 + i*(buttonHeight + margin);
        if (over(x, y, buttonWidth, buttonHeight)) {
            selected = entries.get(i);
            break;
        }
        }
    }

    // Hit-test helper
    boolean over(int x, int y, int w, int h) {
        return mouseX >= x && mouseX <= x + w
            && mouseY >= y && mouseY <= y + h;
    }

    // Query if a song has been selected
    boolean isSongSelected() {
        return selected != null;
    }

    // Retrieve the selected SongEntry
    SongEntry getSelectedEntry() {
        return selected;
    }

}
